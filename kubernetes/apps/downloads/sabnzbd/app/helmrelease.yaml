---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.3
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              SABNZBD__PORT: &port 8080
              NZBGET__APPLICATION_URL: &host "sabnzbd.${INGRESS_DOMAIN}"
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd, sabnzbd.downloads, sabnzbd.downloads.svc, sabnzbd.downloads.svc.cluster, sabnzbd.downloads.svc.cluster.local, sabnzbd.${INGRESS_DOMAIN}
            envFrom:
            - secretRef:
                name: sabnzbd-api-keys
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      nodeSelector:
        kubernetes.io/arch: "amd64"

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/logs
      tmp:
        type: emptyDir
      backup:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-backups
        advancedMounts:
          sabnzbd:
            app:
            - path: /config/Backups
      downloads:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-downloads
        advancedMounts:
          sabnzbd:
            app:
            - path: /mnt/unionfs/downloads

    route:
      app:
        hostnames: 
          - "{{ .Release.Name }}.${INGRESS_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
