---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: rook-ceph-cluster
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: v1.16.6
  url: oci://ghcr.io/rook/rook-ceph-cluster
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
    configOverride: |
      [osd]
      osd_max_backfills = 6
      osd_recovery_max_active_hdd = 16
      # Default is false. Set to true to auto repair inconsensistencies on EC & bluestore pools
      osd_scrub_auto_repair = true
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote   4 caused nodes to overload CPU
          osd_class_update_on_start: "false" # quote
          # Cant enable due to `Module 'diskprediction_local' has failed: No module named 'sklearn.svm.classes'`
          # device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: "7200" # 2h
        osd:
          bluestore_min_alloc_size_hdd: "65536"
          # osd_max_backfill: "6"
          # osd_recovery_max_active_hdd: "16"
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
      mgr:
        modules:
        # - name: diskprediction_local
        #   enabled: true
        - name: insights
          enabled: true
        - name: pg_autoscaler
          enabled: true
        - name: rook
          enabled: true
      mon:
        count: 3
        allowMultiplePerNode: false
      network:
        provider: host
        addressRanges:
          public:
          - "10.200.40.0/24"
          cluster:
          - "10.200.2.0/24"
        connections:
          requireMsgr2: true
      resources:
        osd:
          requests:
            cpu: "100m"
            memory: 2Gi
        mon:
          requests:
            cpu: "100m"
            memory: "1Gi"
        mgr:
          requests:
            cpu: 100m
            memory: 512Mi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 50Mi
      # The option to automatically remove OSDs that are out and are safe to destroy.
      removeOSDsIfOutAndSafeToRemove: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
        - name: work1
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A056FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0Q4FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"

        - name: n100-01
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM005G-2KH133_ZL2EJL04"
            config:
              metadataDevice: "/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF913601C3960CGN"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5061XS"
            config:
              metadataDevice: "/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF913601C3960CGN"

        - name: n100-02
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JTCBF"
            config:
              metadataDevice: "/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF911600AW960CGN"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5060G7"
            config:
              metadataDevice: "/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF911600AW960CGN"

        - name: n100-04
          devices:
          # HDDs
          - name: "/dev/disk/by-id/usb-ST16000N_M000J-2TW103_00000000006E-0:1"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020024662"
          - name: "/dev/disk/by-id/usb-ST16000N_M001G-2KK103_00000000006E-0:0"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020024662"
          # NVMe
          - name: "/dev/disk/by-id/nvme-Samsung_SSD_990_EVO_1TB_S7M3NL0XA13919R"

        - name: n100-05
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM000J-2TW103_WRS05FXH"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1520024111"
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JT6BZ"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1520024111"
          # NVMe
          - name: "/dev/disk/by-id/nvme-Samsung_SSD_990_EVO_1TB_S7M3NL0XA03063W"

        - name: n100-06
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A008FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020026193"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A028FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020026193"
          # NVMe
          - name: "/dev/disk/by-id/nvme-WDC_WDS100T2B0C-00PXH0_211603A00104"

        - name: n100-07
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2N7J9V"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-SAMSUNG_MZVKW512HMJP-000H1_S34CNX0J600772"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A067FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-SAMSUNG_MZVKW512HMJP-000H1_S34CNX0J600772"
          # NVMe
          - name: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_BTNH933518TQ1P0B"

        - name: n100-08
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0NNFVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-WDC_PC_SN720_SDAQNTW-512G-1001_1850C2801787"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_WR500Y0J"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-WDC_PC_SN720_SDAQNTW-512G-1001_1850C2801787"
          # NVMe
          - name: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K302L2E11RJ"
    cephBlockPools:
    - name: ceph-blockpool-nvme
      spec:
        deviceClass: nvme
        failureDomain: host
        replicated:
          size: 2
      storageClass:
        enabled: true
        name: ceph-blockpool-nvme
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: Immediate
        mountOptions: [ "discard" ]
        parameters:
          # TODO: Consider enabling compression on cluster rebuild
          # compression_mode: aggressive
          # compression_algorithm: zstd
          imageFormat: "2"
          # Need to remove the old storageClass to enable this.  Field is immutable 
          # imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
          imageFeatures: layering
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems:
    - name: &cephFileSystemName ceph-filesystem
      spec:
        # Default is true. Setting to false will allow the ceph-operator to delete the pools when deleting the filesystem
        preservePoolsOnDelete: false
        metadataPool:
          failureDomain: host
          deviceClass: nvme
          replicated:
            size: 3
        dataPools:
        - name: data0
          failureDomain: host
          deviceClass: hdd
          replicated:
            size: 3
        - name: erasurecoded
          failureDomain: host
          deviceClass: hdd
          erasureCoded:
            dataChunks: 6
            codingChunks: 2
        metadataServer:
          activeCount: 1
          activeStandby: true
          priorityClassName: system-cluster-critical
          placement:
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ceph-mds
                  app.kubernetes.io/part-of: *cephFileSystemName
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
            limits:
              memory: 4Gi
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: erasurecoded
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: {}
    # - name: &cephObjectStoreName ceph-objectstore-1
    #   spec:
    #     deviceClass: nvme
    #     metadataPool:
    #       deviceClass: nvme
    #       failureDomain: host
    #       replicated:
    #         size: 3
    #     dataPool:
    #       deviceClass: nvme
    #       failureDomain: host
    #       replicated:
    #         size: 3
    #     preservePoolsOnDelete: false
    #     gateway:
    #       port: 80
    #       resources:
    #         requests:
    #           cpu: 250m
    #           memory: 1Gi
    #         limits:
    #           memory: 3Gi
    #     instances: 1
    #     priorityClassName: system-cluster-critical
    #     healthCheck:
    #       bucket:
    #         interval: 60s
    #   storageClass:
    #     enabled: true
    #     name: ceph-bucket
    #     reclaimPolicy: Delete
    #     parameters:
    #       region: us-east-1
