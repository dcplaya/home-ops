---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app autoscan
  namespace: media
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    global:
      nameOverride: *app
      fullnameOverride: *app

    controllers:
      autoscan:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: cloudb0x/autoscan
              tag: "1.4.0"
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                memory: "128M"
              limits:
                memory: "512M"
            probes:
              liveness:
                enabled: true
                custom: true
                ## The spec field contains the values for the default livenessProbe.
                ## If you selected custom: true, this field holds the definition of the livenessProbe.
                spec:
                  exec:
                    command:
                    - /usr/bin/env
                    - bash
                    - -c
                    - username=`grep -B 1 'username:' /config/config.yml | tail -n1 | awk '{ print $2}'` && password=`grep -B 1 'password:' /config/config.yml | tail -n1 | awk '{ print $2}'` && curl --fail $username:$password@localhost:3030/triggers/manual
                  failureThreshold: 5
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 3030

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      configdata:
        enabled: true
        type: secret
        name: autoscan-secret
        globalMounts:
        - path: /config/config.yml
          subPath: config.yml
          readOnly: true
      music:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-music
        advancedMounts:
          autoscan:
            app:
            - path: /mnt/unionfs/Media/Music/
      movies:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-movies
        advancedMounts:
          autoscan:
            app:
            - path: /mnt/unionfs/Media/Movies/
      tv:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-tv
        advancedMounts:
          autoscan:
            app:
            - path: /mnt/unionfs/Media/TV
      downloads:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-downloads
        advancedMounts:
          autoscan:
            app:
            - path: /mnt/unionfs/downloads

    route:
      app:
        hostnames: 
          - "{{ .Release.Name }}.${INGRESS_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

