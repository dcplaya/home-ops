---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              # PUID: "1000"
              # PGID: "100"
              ADVERTISE_IP: "https://plex.${INGRESS_DOMAIN}:443,https://plex.${INGRESS_DOMAIN},https://${LB_PLEX}:32400"
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/8
              # PLEX_PREFERENCE_1: "FriendlyName=plex-kubernetes"
              # PLEX_PREFERENCE_2: "EnableIPv6=0"
              # PLEX_PREFERENCE_3: "logDebug=0"
              # PLEX_PREFERENCE_4: "DisableTLSv1_0=1"
              # PLEX_PREFERENCE_5: "LanNetworksBandwidth=xxx.xxx.xxx.0/18\,xxx.xxx.xxx.0/24\,xxx.xxx.xxx.0/24"
              # PLEX_PREFERENCE_6: "TranscoderQuality=2"
              # PLEX_PREFERENCE_7: "TreatWanIpAsLocal=0"
              # PLEX_PREFERENCE_8: "TranscoderH264BackgroundPreset=fast"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              # requests:
              #   cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                #memory: 6Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${LB_PLEX}
        ports:
          http:
            port: &port 32400
            # externalTrafficPolicy: Cluster

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      # Separate PVC for cache to avoid backing up cache files
      plex-cache:
        enabled: true
        existingClaim: plex-cache
        globalMounts:
        - path: "/config/Library/Application Support/Plex Media Server/Cache"
      logs:
        type: emptyDir
        globalMounts:
        - path: "/config/Library/Application Support/Plex Media Server/Logs"
      tmp:
        type: emptyDir
      transcode:
        enabled: true
        type: emptyDir
      backup:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-backups
        advancedMounts:
          plex:
            app:
            - path: /config/Backups
              subPath: ./Kubernetes/${CLUSTER_NAME}/Applications/plex
      music:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-music
        advancedMounts:
          plex:
            app:
            - path: /mnt/unionfs/Media/Music/
      movies:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-movies
        advancedMounts:
          plex:
            app:
            - path: /mnt/unionfs/Media/Movies/
      tv:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-tv
        advancedMounts:
          plex:
            app:
            - path: /mnt/unionfs/Media/TV

    route:
      app:
        hostnames: 
          - "{{ .Release.Name }}.${INGRESS_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
